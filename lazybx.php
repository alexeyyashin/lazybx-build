<?php
// version: 2.4.0
// Build6477313c63b7a

namespace {
    if (PHP_SAPI !== 'cli') {
        exit(1);
    }
}
namespace Build6477313c63b7a{
    class Src{private static array $b = ['/templates/blueprint.php' => 'PD9waHAKX19ERVNDUklQVElPTl9fCiRibHVlcHJpbnQgPSBuZXcgXEJtXEJsdWVwcmludFxNaWdyYXRpb25cSGlnaGxvYWRTdHJ1Y3R1cmUoJ19fSExOQU1FX18nKTsKCiRibHVlcHJpbnQKICAgIC0+c2V0VGFibGVOYW1lKCdfX1RBQkxFTkFNRV9fJyk7CgpyZXR1cm4gJGJsdWVwcmludDsK','/templates/lazybx.config.json' => 'ewogICJyb290IjogIi4iLAogICJuYW1lc3BhY2UiOiAiTXlSb290TmFtZXNwYWNlIiwKICAiZW50aXR5IjogewogICAgInBhdGgiOiAie3tyb290fX0vbGliL0VudGl0eSIsCiAgICAibmFtZXNwYWNlIjogInt7bmFtZXNwYWNlfX1cXEVudGl0eSIsCiAgICAicGFyZW50IjogIlxcQWJzdHJhY3RFbnRpdHkiLAogICAgImRlZmF1bHRDb2xsZWN0aW9uIjogIlxcRGVmYXVsdENvbGxlY3Rpb24iCiAgfSwKICAibW9kZWwiOiB7CiAgICAicGF0aCI6ICJ7e3Jvb3R9fS9saWIvTW9kZWwiLAogICAgIm5hbWVzcGFjZSI6ICJ7e25hbWVzcGFjZX19XFxNb2RlbCIsCiAgICAicGFyZW50IjogIlxcQWJzdHJhY3RNb2RlbCIKICB9LAogICJibHVlcHJpbnQiOiB7CiAgICAicm9vdCI6ICJ7e3Jvb3R9fS9ibHVlcHJpbnQiLAogICAgInBhdGgiOiAie3tibHVlcHJpbnQucm9vdH19L2RhdGEiLAogICAgImxhc3QiOiAie3tibHVlcHJpbnQucm9vdH19Ly5sYXN0IiwKICAgICJwYXJlbnQiOiAiXFxBYnN0cmFjdEJsdWVwcmludCIsCiAgICAiZmllbGRQYXJlbnQiOiAiXFxBYnN0cmFjdEZpZWxkQmx1ZXByaW50IiwKICAgICJhdXRvbG9hZGVyIjogInt7Ymx1ZXByaW50LnJvb3R9fS9wYXRoL3RvL2F1dG9sb2FkZXIucGhwIiwKICAgICJjdXN0b21UZW1wbGF0ZVBhdGgiOiBudWxsCiAgfSwKICAibWV0YSI6IHsKICAgICJnZW5lcmF0ZSI6IHRydWUsCiAgICAiY29sbGVjdGlvbiI6IHsKICAgICAgInRlbXBsYXRlIjogbnVsbCwKICAgICAgInBhdGgiOiAie3tyb290fX0vbWV0YS9Db2xsZWN0aW9uIiwKICAgICAgIm5hbWVzcGFjZSI6ICJ7e25hbWVzcGFjZX19XFxNZXRhXFxDb2xsZWN0aW9uIgogICAgfQogIH0sCiAgInRyaW0iOiBbIndvcmRzIiwgInRvIiwgImV4Y2x1ZGUiLCAiZHVyaW5nIiwgImNvZGUiLCAiZ2VuZXJhdGlvbiJdCn0K',];public static function get(string $a): ?string{return (self::$b[$a] ?? null) ? base64_decode(self::$b[$a] ?? null) : null;}}class Loader{public static function loadClass(string $className): void{try{eval(base64_decode(['lazy\cli\command\abstractcommand' => '','lazy\cli\command\helpcommand' => 'bmFtZXNwYWNlIExhenlcQ2xpXENvbW1hbmQ7CmNsYXNzIEhlbHBDb21tYW5kIGV4dGVuZHMgQWJzdHJhY3RDb21tYW5kCnsKcHJvdGVjdGVkIHN0YXRpYyBmdW5jdGlvbiBnZXREZXNjcmlwdGlvbigpCnsKcmV0dXJuICdTaG93IGxpc3Qgb2YgY29tbWFuZHMnOwp9CnByb3RlY3RlZCBmdW5jdGlvbiBnZXRDbGFzc2VzKCkKewokcmVzdWx0ID0gYXJyYXlfZmlsdGVyKGFycmF5X21hcChmdW5jdGlvbiAoJGl0ZW0pIHsKaWYgKAokaXRlbSAhPT0gQWJzdHJhY3RDb21tYW5kOjpjbGFzcyAmJiAoCnN0cnBvcygkaXRlbSwgJ0NsaVxcQ29tbWFuZFxcJykgPT09IDAKfHwgc3RycG9zKCRpdGVtLCAnTGF6eVxcQ2xpXFxDb21tYW5kXFwnKSA9PT0gMAopCikgewppZiAoc3RycG9zKCRpdGVtLCAnQ2xpXFxDb21tYW5kXFwnKSA9PT0gMCkgewokY29tbWFuZF9uYW1lID0gc3Vic3RyKCRpdGVtLCBzdHJsZW4oJ0NsaVxcQ29tbWFuZFxcJykpOwp9IGVsc2VpZiAoc3RycG9zKCRpdGVtLCAnTGF6eVxcQ2xpXFxDb21tYW5kXFwnKSA9PT0gMCkgewokY29tbWFuZF9uYW1lID0gc3Vic3RyKCRpdGVtLCBzdHJsZW4oJ0xhenlcXENsaVxcQ29tbWFuZFxcJykpOwp9CiRjb21tYW5kX25hbWUgPSBzdWJzdHIoJGNvbW1hbmRfbmFtZSwgMCwgLXN0cmxlbignY29tbWFuZCcpKTsKJHdvcmRzID0gYXJyYXlfZmlsdGVyKHByZWdfc3BsaXQoJ34oPz1bQS1aXVteQS1aXSl+JywgcHJlZ19yZXBsYWNlKCd+XFcrficsICc6JywgJGNvbW1hbmRfbmFtZSkpKTsKJGRlc2NyaXB0aW9uID0gJGl0ZW06OmdldERlc2NyaXB0aW9uKCk7CnJldHVybiBbc3RydG9sb3dlcihpbXBsb2RlKCctJywgJHdvcmRzKSksICRkZXNjcmlwdGlvbl07Cn0KcmV0dXJuIG51bGw7Cn0sIGdldF9kZWNsYXJlZF9jbGFzc2VzKCkpKTsKcmV0dXJuICRyZXN1bHQ7Cn0KcHJvdGVjdGVkIGZ1bmN0aW9uIGV4ZWN1dGUoKTogaW50CnsKJHRoaXMtPnNheSgnTGlzdCBvZiBhdmFpbGFibGUgY29tbWFuZHMgYmVsb3c6XG4nKTsKJGNvbW1hbmRzID0gJHRoaXMtPmdldENsYXNzZXMoKTsKJG1heGxlbmd0aCA9IDA7CmZvcmVhY2ggKCRjb21tYW5kcyBhcyBbJGtleV0pIHsKJG1heGxlbmd0aCA9IG1heCgkbWF4bGVuZ3RoLCBzdHJsZW4oJGtleSkpOwp9CiRtYXhsZW5ndGggPSBtaW4oMjYsICRtYXhsZW5ndGgpOwpmb3JlYWNoICgkY29tbWFuZHMgYXMgWyRjb21tYW5kLCAkZGVzY3JpcHRpb25dKSB7CiR0aGlzLT5zYXkoCnNwcmludGYoCidbeWVsbG93XSVzWy9dJXMgICVzJywKJGNvbW1hbmQsCnN0cl9yZXBlYXQoJyAnLCAkbWF4bGVuZ3RoIC0gc3RybGVuKCRjb21tYW5kKSksCiRkZXNjcmlwdGlvbgopCik7Cn0KJHRoaXMtPnNheSgnJyk7CnJldHVybiAwOwp9Cn0K','lazy\config' => 'bmFtZXNwYWNlIExhenk7CmNsYXNzIENvbmZpZwp7CnByb3RlY3RlZCAkY29uZmlnID0gW107CnB1YmxpYyBmdW5jdGlvbiBfX2NvbnN0cnVjdChzdHJpbmcgJHBhdGgpCnsKJHRoaXMtPmNvbmZpZyA9IGpzb25fZGVjb2RlKGZpbGVfZ2V0X2NvbnRlbnRzKCRwYXRoKSwgdHJ1ZSk7Cn0KcHVibGljIGZ1bmN0aW9uIGdldChzdHJpbmcgJHBhdGgsICRkZWZhdWx0ID0gbnVsbCkKewokd29yZHMgPSBleHBsb2RlKCcuJywgJHBhdGgpOwokZm91bmQgPSAkdGhpcy0+Y29uZmlnOwpmb3JlYWNoICgkd29yZHMgYXMgJGl0ZW0pIHsKaWYgKGlzX2FycmF5KCRmb3VuZCkpIHsKJGZvdW5kID0gJGZvdW5kWyRpdGVtXSA/PyBudWxsOwp9IGVsc2UgewokZm91bmQgPSBudWxsOwpicmVhazsKfQp9CmlmICgkZm91bmQgPT09IG51bGwpIHsKJGZvdW5kID0gJGRlZmF1bHQ7Cn0KaWYgKGlzX3N0cmluZygkZm91bmQpKSB7CiRmb3VuZCA9IChzdHJpbmcpZXN0cmluZygkZm91bmQpLT5maWxsUmVjdXJzaXZlKCR0aGlzLT5jb25maWcpOwp9CnJldHVybiAkZm91bmQ7Cn0KfQo=','lazy\core' => 'bmFtZXNwYWNlIExhenk7CnVzZSBMYXp5XENsaVxDb21tYW5kXEFic3RyYWN0Q29tbWFuZDsKY2xhc3MgQ29yZQp7CnB1YmxpYyBzdGF0aWMgZnVuY3Rpb24gc3JjKHN0cmluZyAkcGF0aCk6ID9zdHJpbmcKewokbmFtZSA9ICdMQVpZU05JUFBFVF9CVUlMRF9JRF9DT05TVF9QUkVfU05JUFBFVF9TUkNfJyAuIHByZWdfcmVwbGFjZSgnflxcVyt+JywgJ18wXycsICRwYXRoKTsKaWYgKGRlZmluZWQoJG5hbWUpKSB7CnJldHVybiBiYXNlNjRfZGVjb2RlKGNvbnN0YW50KCRuYW1lKSk7Cn0KcmV0dXJuIG51bGw7Cn0KcHVibGljIHN0YXRpYyBmdW5jdGlvbiBzZWVrU3RydWN0UGF0aEJhY2t3YXJkcyhzdHJpbmcgJG5hbWUsIGJvb2wgJGluY2x1ZGVTZWVrZXIgPSBmYWxzZSk6ID9zdHJpbmcKewokc2VlayA9IF9fRElSX187CmRvIHsKaWYgKGZpbGVfZXhpc3RzKCRzZWVrIC4gJy8nIC4gJG5hbWUpKSB7CnJldHVybiAkc2VlayAuICgkaW5jbHVkZVNlZWtlciA/ICcvJyAuICRuYW1lIDogJycpOwp9CmlmICgkc2VlayA9PT0gJy8nKSB7CnJldHVybiBudWxsOwp9Cn0gd2hpbGUgKCRzZWVrID0gZGlybmFtZSgkc2VlaykpOwpyZXR1cm4gbnVsbDsKfQp9Cg==','cli\command\blueprintcommand' => 'bmFtZXNwYWNlIENsaVxDb21tYW5kOwp1c2UgTGF6eVxDbGlcQ29tbWFuZFxBYnN0cmFjdENvbW1hbmQ7CnVzZSBNYWluOwp1c2UgUnVudGltZUV4Y2VwdGlvbjsKY2xhc3MgQmx1ZXByaW50Q29tbWFuZCBleHRlbmRzIEFic3RyYWN0Q29tbWFuZAp7CnByb3RlY3RlZCAkc2hvcnRPcHRpb25zID0gWwonaCcgPT4gJ2hlbHAnLAondCcgPT4gJ3RhYmxlJywKJ2QnID0+ICdkZXNjJywKXTsKLyoqCiogQHJldHVybiBmYWxzZXxzdHJpbmd8bnVsbAoqLwpwdWJsaWMgZnVuY3Rpb24gZ2V0VGVtcGxhdGUoKQp7CiR0ZW1wbGF0ZSA9IG51bGw7CmlmIChNYWluOjpnZXRDb25maWdQYXRoKCdibHVlcHJpbnQuY3VzdG9tVGVtcGxhdGVQYXRoJykpIHsKaWYgKGlzX2ZpbGUoTWFpbjo6Z2V0Q29uZmlnUGF0aCgnYmx1ZXByaW50LmN1c3RvbVRlbXBsYXRlUGF0aCcpKSkgewokdGVtcGxhdGUgPSBmaWxlX2dldF9jb250ZW50cyhNYWluOjpnZXRDb25maWdQYXRoKCdibHVlcHJpbnQuY3VzdG9tVGVtcGxhdGVQYXRoJykpOwp9IGVsc2UgewokdGhpcy0+c2F5KApzcHJpbnRmKAonW3llbGxvd11XQVJOSU5HOiBjdXN0b20gdGVtcGxhdGUgZmlsZSAiJXMiIG5vdCBmb3VuZC5cbkRlZmF1bHQgYmx1ZXByaW50IHRlbXBsYXRlIHdpbGwgYmUgdXNlZCBpbnN0ZWFkWy9dJywKTWFpbjo6Z2V0Q29uZmlnUGF0aCgnYmx1ZXByaW50LmN1c3RvbVRlbXBsYXRlUGF0aCcpCikKKTsKfQp9CmlmICghJHRlbXBsYXRlKSB7CiR0ZW1wbGF0ZSA9IHNyY19nZXQoJy90ZW1wbGF0ZXMvYmx1ZXByaW50LnBocCcpOwp9CnJldHVybiAkdGVtcGxhdGU7Cn0KcHJvdGVjdGVkIHN0YXRpYyBmdW5jdGlvbiBnZXREZXNjcmlwdGlvbigpCnsKcmV0dXJuICdDcmVhdGUgbmV3IGhsLWJsb2NrIGJsdWVwcmludCc7Cn0KcHJvdGVjdGVkIGZ1bmN0aW9uIGdldFRpbWVzdGFtcCgpCnsKJG51bWJlciA9IChpbnQpKHRpbWUoKSAvIDMpOwokYWxwaCA9ICdhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5eic7CiRiYXNlID0gc3RybGVuKCRhbHBoKTsKJHJlc3VsdCA9IFtdOwp3aGlsZSAoJG51bWJlciA+IDApIHsKJGxlZnQgPSAkbnVtYmVyICUgJGJhc2U7CiRyZXN1bHRbXSA9ICRhbHBoWyRsZWZ0XTsKJG51bWJlciA9IChpbnQpJG51bWJlciAvICRiYXNlOwp9CnJldHVybiBsdHJpbShpbXBsb2RlKGFycmF5X3JldmVyc2UoJHJlc3VsdCkpLCAwKTsKfQpwcm90ZWN0ZWQgZnVuY3Rpb24gc2hvd0hlbHAoKQp7CiR0aGlzLT5zYXkoJHRoaXM6OmdldERlc2NyaXB0aW9uKCkpOwokdGhpcy0+c2F5KCdcblVzYWdlOicpOwokdGhpcy0+c2F5KCd+JFx0Ymx1ZXByaW50IFt5ZWxsb3ddPG9wdGlvbnM+Wy9dJyk7CiR0aGlzLT5zYXkoJ1xuTGlzdCBvZiBhdmFpbGFibGUgb3B0aW9uczonKTsKJHRoaXMtPnNheSgnXHRbeWVsbG93XS1oLCAtLWhlbHBbL11cdFNob3cgdGhpcyBoZWxwJyk7CiR0aGlzLT5zYXkoJ1x0W3llbGxvd10tLW5hbWVbL11cdFx0U2V0dXAgaGwtYmxvY2sgbmFtZScpOwokdGhpcy0+c2F5KCdcdFt5ZWxsb3ddLXQsIC0tdGFibGVbL11cdFNldHVwIGhsLWJsb2NrIHRhYmxlIG5hbWUsIGxlYXZlIGVtcHR5IHRvIGdlbmVyYXRlIGF1dG9tYXRpY2FsbHknKTsKJHRoaXMtPnNheSgnXHRbeWVsbG93XS1kLCAtLWRlc2NbL11cdFNldHVwIGJsdWVwcmludCBkZXNjcmlwdGlvbicpOwp9CnByb3RlY3RlZCBmdW5jdGlvbiBleGVjdXRlKCk6IGludAp7CmlmICgkdGhpcy0+Z2V0T3B0aW9uKCdoZWxwJykpIHsKJHRoaXMtPnNob3dIZWxwKCk7CnJldHVybiAwOwp9CiR0ZW1wbGF0ZSA9ICR0aGlzLT5nZXRUZW1wbGF0ZSgpOwokbmFtZSA9ICR0aGlzLT5nZXRPcHRpb24oJ25hbWUnKSA/PyAkdGhpcy0+cHJvbXB0KCdITC1ibG9jayBuYW1lJyk7CiR0YWJsZSA9ICR0aGlzLT5nZXRPcHRpb24oJ3RhYmxlJykgPz8gJHRoaXMtPnByb21wdCgnVGFibGUgbmFtZScsIGVzdHJpbmcoJG5hbWUpLT50b1NuYWtlQ2FzZSgpKTsKaWYgKCR0YWJsZSA9PT0gdHJ1ZSkgewokdGFibGUgPSBlc3RyaW5nKCRuYW1lKS0+dG9TbmFrZUNhc2UoKTsKfQokZGVzY3JpcHRpb24gPSAkdGhpcy0+Z2V0T3B0aW9uKCdkZXNjJykgPz8gJHRoaXMtPnByb21wdCgnQmx1ZXByaW50IGRlc2NyaXB0aW9uJyk7CmlmICgkZGVzY3JpcHRpb24gPT09IHRydWUpIHsKJGRlc2NyaXB0aW9uID0gbnVsbDsKfQokcmVwbGFjZW1lbnRzID0gWwonX19ITE5BTUVfXycgPT4gZXN0cmluZygkbmFtZSktPnRvQ2FtZWxDYXNlKCksCidfX1RBQkxFTkFNRV9fJyA9PiBlc3RyaW5nKCR0YWJsZSktPnRvU25ha2VDYXNlKCksCidfX0RFU0NSSVBUSU9OX18nID0+ICgkZGVzY3JpcHRpb24gPyAiXG4vLyAiIC4gJGRlc2NyaXB0aW9uIC4gIlxuIiA6ICcnKSwKXTsKJG5hbWUgPSAnYjUwMF8nIC4gJHRoaXMtPmdldFRpbWVzdGFtcCgpIC4gJ18nIC4gZXN0cmluZygkbmFtZSktPnRvQ2FtZWxDYXNlKCk7CmlmICghbWtkaXIoJGNvbmN1cnJlbnREaXJlY3RvcnkgPSBNYWluOjpnZXRDb25maWdQYXRoKCdibHVlcHJpbnQucGF0aCcpLCAwNzc3LCB0cnVlKSAmJiAhaXNfZGlyKAokY29uY3VycmVudERpcmVjdG9yeQopKSB7CnRocm93IG5ldyBSdW50aW1lRXhjZXB0aW9uKHNwcmludGYoJ0RpcmVjdG9yeSAiJXMiIHdhcyBub3QgY3JlYXRlZCcsICRjb25jdXJyZW50RGlyZWN0b3J5KSk7Cn0KaWYgKCFta2RpcigkY29uY3VycmVudERpcmVjdG9yeSA9IGRpcm5hbWUoTWFpbjo6Z2V0Q29uZmlnUGF0aCgnYmx1ZXByaW50Lmxhc3QnKSksIDA3NzcsIHRydWUpICYmICFpc19kaXIoCiRjb25jdXJyZW50RGlyZWN0b3J5CikpIHsKdGhyb3cgbmV3IFJ1bnRpbWVFeGNlcHRpb24oc3ByaW50ZignRGlyZWN0b3J5ICIlcyIgd2FzIG5vdCBjcmVhdGVkJywgJGNvbmN1cnJlbnREaXJlY3RvcnkpKTsKfQpmaWxlX3B1dF9jb250ZW50cygKc3ByaW50ZigiJXMvJXMucGhwIiwgTWFpbjo6Z2V0Q29uZmlnKCdibHVlcHJpbnQucGF0aCcpLCAkbmFtZSksCnN0cl9yZXBsYWNlKAphcnJheV9rZXlzKCRyZXBsYWNlbWVudHMpLAokcmVwbGFjZW1lbnRzLAokdGVtcGxhdGUgLiAiXG4vLyAiIC4gVmVyc2lvbkNvbW1hbmQ6OmdldFByaW50YWJsZSgpIC4gIlxuIgopCik7CmZpbGVfcHV0X2NvbnRlbnRzKE1haW46OmdldENvbmZpZygnYmx1ZXByaW50Lmxhc3QnKSwgJG5hbWUpOwpwcmludGYoIkJsdWVwcmludCAlcyBjcmVhdGVkXG4iLCAkbmFtZSk7CnJldHVybiAwOwp9Cn0K','cli\command\entitycommand' => '','cli\command\initcommand' => 'bmFtZXNwYWNlIENsaVxDb21tYW5kOwp1c2UgTGF6eVxDbGlcQ29tbWFuZFxBYnN0cmFjdENvbW1hbmQ7CmNsYXNzIEluaXRDb21tYW5kIGV4dGVuZHMgQWJzdHJhY3RDb21tYW5kCnsKcHJvdGVjdGVkIGZ1bmN0aW9uIGV4ZWN1dGUoKTogaW50CnsKaWYgKFxNYWluOjppc0NvbmZpZ3VyZWQoKSkgewokdGhpcy0+aW50ZXJydXB0KCdsYXp5YnggaXMgYWxyZWFkeSBjb25maWd1cmVkJyk7Cn0KJHBhdGggPSAkdGhpcy0+cHJvbXB0KCdQYXRoIHRvIGNyZWF0ZSBjb25maWcnLCBfX0RJUl9fKTsKJG5hbWUgPSAkdGhpcy0+cHJvbXB0KCdGaWxlIG5hbWUnLCAnbGF6eWJ4Lmpzb24nKTsKJGZ1bGxQYXRoID0gJHBhdGggLiAnLycgLiAkbmFtZTsKaWYgKGZpbGVfZXhpc3RzKCRmdWxsUGF0aCkpIHsKJHRoaXMtPmludGVycnVwdChzcHJpbnRmKCdGaWxlICVzIGFscmVhZHkgZXhpc3RzJywgJGZ1bGxQYXRoKSk7Cn0KJHJlcyA9IGZpbGVfcHV0X2NvbnRlbnRzKCRmdWxsUGF0aCwgc3JjX2dldCgnL3RlbXBsYXRlcy9sYXp5YnguY29uZmlnLmpzb24nKSk7CmlmICghJHJlcykgewokdGhpcy0+aW50ZXJydXB0KHNwcmludGYoJ1VuYWJsZSB0byBjcmVhdGUgZmlsZSBhdCAlcycsICRmdWxsUGF0aCkpOwp9CiR0aGlzLT5zYXkoJ0NvbmZpZyBzdWNjZXNzZnVsbHkgY3JlYXRlZFxuJyk7CiR0aGlzLT5zYXkoJyBbeWVsbG93XeKWiOKWiOKWiOKWiOKWiOKWiOKWiOKWiOKWiOKWiOKWiOKWiOKWiOKWiOKWiOKWiOKWiOKWiOKWiOKWiOKWiOKWiOKWiOKWiOKWiOKWiOKWiOKWiOKWiOKWiOKWiOKWiOKWiOKWiOKWiOKWiOKWiOKWiOKWiFsvXSAnKTsKJHRoaXMtPnNheSgnIFt5ZWxsb3dd4paIICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIOKWiFsvXSAnKTsKJHRoaXMtPnNheSgnIFt5ZWxsb3dd4paI4paIWy9dICBEb3VibGUgY2hlY2sgY29uZmlnIGJlZm9yZSB1c2FnZSBbeWVsbG93XeKWiOKWiFsvXSAnKTsKJHRoaXMtPnNheSgnIFt5ZWxsb3dd4paIICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIOKWiFsvXSAnKTsKJHRoaXMtPnNheSgnIFt5ZWxsb3dd4paI4paI4paI4paI4paI4paI4paI4paI4paI4paI4paI4paI4paI4paI4paI4paI4paI4paI4paI4paI4paI4paI4paI4paI4paI4paI4paI4paI4paI4paI4paI4paI4paI4paI4paI4paI4paI4paI4paIWy9dICcpOwpyZXR1cm4gMDsKfQp9Cg==','cli\command\updatecommand' => 'bmFtZXNwYWNlIENsaVxDb21tYW5kOwp1c2UgTGF6eVxDbGlcQ29tbWFuZFxBYnN0cmFjdENvbW1hbmQ7CnVzZSBNYWluOwpjbGFzcyBVcGRhdGVDb21tYW5kIGV4dGVuZHMgQWJzdHJhY3RDb21tYW5kCnsKcHJvdGVjdGVkIHN0YXRpYyBmdW5jdGlvbiBnZXREZXNjcmlwdGlvbigpCnsKcmV0dXJuICdJbnN0YWxsIG5ldyB2ZXJzaW9uIG9mIHRoaXMgdG9vbCc7Cn0KLyoqCiogQHJldHVybiBhcnJheXxtaXhlZHxzdHJpbmd8bnVsbAoqLwpwdWJsaWMgc3RhdGljIGZ1bmN0aW9uIGdldFVwZGF0ZVNyYygpCnsKcmV0dXJuIE1haW46OmdldENvbmZpZygpLT5nZXQoCid1cGRhdGVGcm9tJywKJ2h0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9hbGV4ZXl5YXNoaW4vbGF6eWJ4LWJ1aWxkL21hc3Rlci9sYXp5YngucGhwJwopOwp9CnByb3RlY3RlZCBzdGF0aWMgZnVuY3Rpb24gZ2V0VXBkYXRlRmlsZSgpOiA/c3RyaW5nCnsKJHNyYyA9IHNlbGY6OmdldFVwZGF0ZVNyYygpOwpyZXR1cm4gQGZpbGVfZ2V0X2NvbnRlbnRzKCRzcmMpID86IG51bGw7Cn0KcHVibGljIHN0YXRpYyBmdW5jdGlvbiBjaGVja1VwZGF0ZSgpCnsKJGJ1aWxkSWQgPSBNYWluOjpnZXRCdWlsZElkKCk7CiR1cGRhdGUgPSBzZWxmOjpnZXRVcGRhdGVGaWxlKCk7CmlmICghJHVwZGF0ZSkgewpyZXR1cm4gZmFsc2U7Cn0KWyR2ZXJzaW9uLCAkbmV3QnVpbGRJZF0gPSBNYWluOjpnZXRCdWlsZElkRnJvbVN0cmluZyhzZWxmOjpnZXRVcGRhdGVGaWxlKCkpOwpyZXR1cm4gJGJ1aWxkSWQgJiYgJG5ld0J1aWxkSWQgJiYgJG5ld0J1aWxkSWQgPiAkYnVpbGRJZCA/ICR2ZXJzaW9uIDogbnVsbDsKfQpwcm90ZWN0ZWQgZnVuY3Rpb24gZXhlY3V0ZSgpOiBpbnQKewppZiAoIXN0YXRpYzo6Y2hlY2tVcGRhdGUoKSkgewokdGhpcy0+c2F5KCdObyB1cGRhdGVzIGF2YWlsYWJsZScpLT5zdG9wKCk7Cn0KaWYgKCR0aGlzLT5wcm9tcHQoJ0RvIHlvdSB3YW50IHRvIGluc3RhbGwgdXBkYXRlPyBbeWVsbG93XShZLCBuKVsvXScsICduJykgPT09ICdZJykgewpmaWxlX3B1dF9jb250ZW50cygkdG1wID0gJF9TRVJWRVJbJ1BIUF9TRUxGJ10gLiAnLnRtcCcsICcnKTsKJG9sZCA9IGZvcGVuKCRfU0VSVkVSWydQSFBfU0VMRiddLCAncitiJyk7CndoaWxlICgkc3RyaW5nID0gZmdldHMoJG9sZCkpIHsKaWYgKHN0cnBvcygkc3RyaW5nLCAnPD9waHAnKSA9PT0gMCkgewpicmVhazsKfQpmaWxlX3B1dF9jb250ZW50cygkdG1wLCAkc3RyaW5nLCBGSUxFX0FQUEVORCk7Cn0KZmlsZV9wdXRfY29udGVudHMoJHRtcCwgc3RhdGljOjpnZXRVcGRhdGVGaWxlKCksIEZJTEVfQVBQRU5EKTsKcmVuYW1lKCR0bXAsICRfU0VSVkVSWydQSFBfU0VMRiddKTsKJHRoaXMtPnNheSgnTmV3IHZlcnNpb24gc3VjY2Vzc2Z1bGx5IGluc3RhbGxlZCcpOwp9CnJldHVybiAwOwp9Cn0K','cli\command\versioncommand' => 'bmFtZXNwYWNlIENsaVxDb21tYW5kOwp1c2UgTGF6eVxDbGlcQ29tbWFuZFxBYnN0cmFjdENvbW1hbmQ7CnVzZSBNYWluOwpjbGFzcyBWZXJzaW9uQ29tbWFuZCBleHRlbmRzIEFic3RyYWN0Q29tbWFuZAp7CnByb3RlY3RlZCBzdGF0aWMgZnVuY3Rpb24gZ2V0RGVzY3JpcHRpb24oKQp7CnJldHVybiAnU2hvd3MgY3VycmVudCB2ZXJzaW9uJzsKfQpwdWJsaWMgc3RhdGljIGZ1bmN0aW9uIGdldFByaW50YWJsZSgpOiBzdHJpbmcKewpyZXR1cm4gJ3YnIC4gaW1wbG9kZSgnICcsIE1haW46OmdldEJ1aWxkSWRGcm9tRmlsZSgkX1NFUlZFUlsnUEhQX1NFTEYnXSkpOwp9CnByb3RlY3RlZCBmdW5jdGlvbiBleGVjdXRlKCk6IGludAp7CiR0aGlzLT5zYXkoc3RhdGljOjpnZXRQcmludGFibGUoKSk7CnJldHVybiAwOwp9Cn0K','main' => 'dXNlIEFsZXhleVlhc2hpblxFU3RyaW5nXEVTdHJpbmc7CnVzZSBDbGlcQ29tbWFuZFxVcGRhdGVDb21tYW5kOwp1c2UgTGF6eVxDbGlcQ29tbWFuZFxBYnN0cmFjdENvbW1hbmQ7CnVzZSBMYXp5XENvbmZpZzsKdXNlIExhenlcQ29yZTsKLyoqCiogQHRlbXBsYXRlIEUKKgoqIEBtZXRob2Qgc3RhdGljIENvbmZpZyBnZXRDb25maWcoKQoqIEBtZXRob2Qgc3RhdGljIHN0cmluZ3xtaXhlZHxudWxsfEUgZ2V0Q29uZmlnKHN0cmluZyAkcGF0aCwgRSAkZGVmYXVsdCA9IG51bGwpCiovCmNsYXNzIE1haW4Kewpwcm90ZWN0ZWQgc3RhdGljICRidWlsZElkID0gbnVsbDsKcHJvdGVjdGVkIHN0YXRpYyAkY29uZmlnUGF0aCA9IG51bGw7CnByb3RlY3RlZCBzdGF0aWMgYm9vbCAkZGVidWcgPSBmYWxzZTsKcHJvdGVjdGVkIGNvbnN0IENPTU1BTkRTID0gWwonYmx1ZXByaW50JywKJ2VudGl0eScsCid1cGRhdGUnLApdOwpwcm90ZWN0ZWQgc3RhdGljICRhcHBDb25maWcgPSBudWxsOwovKioKKiBAcGFyYW0gc3RyaW5nfG51bGwgJHBhdGgKKiBAcGFyYW0gJGRlZmF1bHQKKiBAcmV0dXJuIENvbmZpZ3xtaXhlZHxzdHJpbmd8bnVsbAoqLwpwdWJsaWMgc3RhdGljIGZ1bmN0aW9uIGdldENvbmZpZyhzdHJpbmcgJHBhdGggPSBudWxsLCAkZGVmYXVsdCA9IG51bGwpCnsKaWYgKHNlbGY6OiRhcHBDb25maWcgPT09IG51bGwpIHsKc2VsZjo6JGFwcENvbmZpZyA9IG5ldyBDb25maWcoc2VsZjo6JGNvbmZpZ1BhdGgpOwp9CmlmICgkcGF0aCA9PT0gbnVsbCkgewpyZXR1cm4gc2VsZjo6JGFwcENvbmZpZzsKfQpyZXR1cm4gc2VsZjo6JGFwcENvbmZpZy0+Z2V0KCRwYXRoLCAkZGVmYXVsdCk7Cn0KcHVibGljIHN0YXRpYyBmdW5jdGlvbiBpc0NvbmZpZ3VyZWQoKTogYm9vbAp7CnJldHVybiBzZWxmOjokY29uZmlnUGF0aCAhPT0gbnVsbDsKfQovKioKKiBAcGFyYW0gc3RyaW5nICRzdHJpbmcKKiBAcmV0dXJuIHN0cmluZ1tdfG51bGxbXQoqLwpwdWJsaWMgc3RhdGljIGZ1bmN0aW9uIGdldEJ1aWxkSWRGcm9tU3RyaW5nKHN0cmluZyAkc3RyaW5nKTogYXJyYXkKewpmb3JlYWNoIChleHBsb2RlKCJcbiIsICRzdHJpbmcpIGFzICRpdGVtKSB7CmlmIChzdHJwb3MoJGl0ZW0sICcvLyBCdWlsZCcpID09PSAwKSB7CiRidWlsZCA9IHRyaW0oc3Vic3RyKCRpdGVtLCAyKSk7Cn0KaWYgKHN0cnBvcygkaXRlbSwgJy8vIHZlcnNpb246ICcpID09PSAwKSB7CiR2ZXJzaW9uID0gdHJpbShzdWJzdHIoJGl0ZW0sIDEyKSk7Cn0KfQpyZXR1cm4gWyR2ZXJzaW9uID8/IG51bGwsICRidWlsZCA/PyBudWxsXTsKfQovKioKKiBAcGFyYW0gc3RyaW5nICRmaWxlCiogQHJldHVybiBzdHJpbmdbXXxudWxsW10KKi8KcHVibGljIHN0YXRpYyBmdW5jdGlvbiBnZXRCdWlsZElkRnJvbUZpbGUoc3RyaW5nICRmaWxlKTogYXJyYXkKewokZiA9IGZvcGVuKCRmaWxlLCAncitiJyk7CmlmICghJGYpIHsKcmV0dXJuIFtudWxsLCBudWxsXTsKfQokYnVpbGQgPSBudWxsOwokdmVyc2lvbiA9IG51bGw7CndoaWxlICgkc3RyaW5nID0gZmdldHMoJGYpKSB7CmlmIChzdHJwb3MoJHN0cmluZywgJy8vIEJ1aWxkJykgPT09IDApIHsKJGJ1aWxkID0gdHJpbShzdWJzdHIoJHN0cmluZywgMikpOwp9CmlmIChzdHJwb3MoJHN0cmluZywgJy8vIHZlcnNpb246ICcpID09PSAwKSB7CiR2ZXJzaW9uID0gdHJpbShzdWJzdHIoJHN0cmluZywgMTIpKTsKfQp9CmZjbG9zZSgkZik7CmlmICgkYnVpbGQgfHwgJHZlcnNpb24pIHsKcmV0dXJuIFskdmVyc2lvbiwgJGJ1aWxkXTsKfQpyZXR1cm4gW251bGwsIG51bGxdOwp9CnB1YmxpYyBzdGF0aWMgZnVuY3Rpb24gZ2V0QnVpbGRJZCgpOiBzdHJpbmcKewppZiAoc2VsZjo6JGJ1aWxkSWQgPT09IG51bGwpIHsKaWYgKCFzZWxmOjppc0RlYnVnKCkpIHsKc2VsZjo6JGJ1aWxkSWQgPSBzZWxmOjpnZXRCdWlsZElkRnJvbUZpbGUoJF9TRVJWRVJbJ1BIUF9TRUxGJ10pWzFdOwp9IGVsc2UgewpzZWxmOjokYnVpbGRJZCA9ICdkZWJ1Zyc7Cn0KfQpyZXR1cm4gc2VsZjo6JGJ1aWxkSWQ7Cn0KLyoqCiogQHBhcmFtIHN0cmluZyAka2V5CiogQHJldHVybiBzdHJpbmd8bnVsbAoqIEBkZXByZWNhdGVkCiogQHNlZSBNYWluOjpnZXRDb25maWcoKQoqLwpwdWJsaWMgc3RhdGljIGZ1bmN0aW9uIGdldENvbmZpZ1BhdGgoc3RyaW5nICRrZXkpOiA/c3RyaW5nCnsKJHBhdGggPSBzZWxmOjpnZXRDb25maWcoKS0+Z2V0KCRrZXkpOwppZiAoISRwYXRoKSB7CnJldHVybiBudWxsOwp9CmlmIChzdHJwb3MoJHBhdGgsICcvJykgPT09IDApIHsKcmV0dXJuICRwYXRoOwp9CnJldHVybiBfX0RJUl9fIC4gJy8nIC4gJHBhdGg7Cn0KcHJvdGVjdGVkIHN0YXRpYyBmdW5jdGlvbiBsb2FkQ29tbWFuZENsYXNzKHN0cmluZyAkbmFtZSwgYm9vbCAkYnVpbHRpbiA9IGZhbHNlKQp7CiRjb21tYW5kTmFtZSA9ICRuYW1lOwokbnMgPSBleHBsb2RlKCc6JywgJGNvbW1hbmROYW1lKTsKJHNuID0gaW1wbG9kZSgKJ1xcJywKYXJyYXlfbWFwKGZ1bmN0aW9uICgkaXRlbSkgewpyZXR1cm4gKG5ldyBFU3RyaW5nKCRpdGVtKSktPnRvQ2FtZWxDYXNlKCk7Cn0sICRucykKKTsKJGNvbW1hbmRDbGFzcyA9ICgkYnVpbHRpbiA/ICdMYXp5XFwnIDogJycpIC4gJ0NsaVxcQ29tbWFuZFxcJyAuICRzbiAuICdDb21tYW5kJzsKY2xhc3NfZXhpc3RzKCRjb21tYW5kQ2xhc3MsIHRydWUpOwpyZXR1cm4gJGNvbW1hbmRDbGFzczsKfQpwdWJsaWMgc3RhdGljIGZ1bmN0aW9uIGdldERvY3VtZW50Um9vdCgpCnsKcmV0dXJuIENvcmU6OnNlZWtTdHJ1Y3RQYXRoQmFja3dhcmRzKCdiaXRyaXgvLnNldHRpbmdzLnBocCcpOwp9CnB1YmxpYyBzdGF0aWMgZnVuY3Rpb24gcmVxdWlyZUJpdHJpeCgpCnsKaW5pX3NldCgnc2hvcnRfb3Blbl90YWcnLCAnT24nKTsKZGVmaW5lKCdOT1RfQ0hFQ0tfUEVSTUlTU0lPTlMnLCB0cnVlKTsKaWYgKCgkcm9vdCA9IHNlbGY6OmdldERvY3VtZW50Um9vdCgpKSA9PT0gbnVsbCkgewpBYnN0cmFjdENvbW1hbmQ6OndyaXRlVG9DbGkoJ1tyZWRdRVJST1I6IG11c3QgYmUgcnVuIHNvbWV3aGVyZSBpbiBiaXRyaXhbL10nKTsKZXhpdCgxKTsKfQokX1NFUlZFUlsnRE9DVU1FTlRfUk9PVCddID0gJHJvb3Q7CnJlcXVpcmVfb25jZSAkX1NFUlZFUlsnRE9DVU1FTlRfUk9PVCddIC4gJy9iaXRyaXgvbW9kdWxlcy9tYWluL2luY2x1ZGUvcHJvbG9nX2JlZm9yZS5waHAnOwp9CnB1YmxpYyBzdGF0aWMgZnVuY3Rpb24gcnVuKCk6IGludAp7Cmdsb2JhbCAkYXJndjsKc2VsZjo6JGNvbmZpZ1BhdGggPSBDb3JlOjpzZWVrU3RydWN0UGF0aEJhY2t3YXJkcygnbGF6eWJ4Lmpzb24nLCB0cnVlKTsKaWYgKHNlbGY6OiRjb25maWdQYXRoID09PSBudWxsICYmICRhcmd2WzFdICE9PSAnaW5pdCcpIHsKQWJzdHJhY3RDb21tYW5kOjp3cml0ZVRvQ2xpKCdbcmVkXUVSUk9SOiBDb25maWcgZmlsZSBub3QgZm91bmRbL10nKTsKQWJzdHJhY3RDb21tYW5kOjp3cml0ZVRvQ2xpKAonQ3JlYXRlIGxhenlieC5qc29uIG1hbnVhbGx5IG9yIHJ1biAiW2JsdWVdaW5pdFsvXSIgY29tbWFuZCB0byBjcmVhdGUgZGVmYXVsdCBjb25maWcnCik7CnJldHVybiAxOwp9CiRyZXN1bHQgPSBudWxsOwphcnJheV9tYXAoW3NlbGY6OmNsYXNzLCAnbG9hZENvbW1hbmRDbGFzcyddLCBzdGF0aWM6OkNPTU1BTkRTKTsKJGNvbW1hbmRDbGFzcyA9IHNlbGY6OmxvYWRDb21tYW5kQ2xhc3MoJGFyZ3ZbMV0gPz8gJ2hlbHAnKTsKaWYgKGNsYXNzX2V4aXN0cygkY29tbWFuZENsYXNzKSAmJiBpc19hKCRjb21tYW5kQ2xhc3MsIEFic3RyYWN0Q29tbWFuZDo6Y2xhc3MsIHRydWUpKSB7CiRyZXN1bHQgPSAkY29tbWFuZENsYXNzOjpydW4oKTsKfQokY29tbWFuZENsYXNzID0gc2VsZjo6bG9hZENvbW1hbmRDbGFzcygkYXJndlsxXSA/PyAnaGVscCcsIHRydWUpOwppZiAoJHJlc3VsdCAhPT0gbnVsbCAmJiBjbGFzc19leGlzdHMoJGNvbW1hbmRDbGFzcykgJiYgaXNfYSgkY29tbWFuZENsYXNzLCBBYnN0cmFjdENvbW1hbmQ6OmNsYXNzLCB0cnVlKSkgewokcmVzdWx0ID0gJGNvbW1hbmRDbGFzczo6cnVuKCk7Cn0KaWYgKCRyZXN1bHQgPT09IG51bGwpIHsKJHJlc3VsdCA9IDE7CkFic3RyYWN0Q29tbWFuZDo6d3JpdGVUb0NsaShzcHJpbnRmKCdbcmVkXUNvbW1hbmQgIiVzIiBkb2VzIG5vdCBleGlzdFsvXScsICRhcmd2WzFdID8/IG51bGwpKTsKfQppZiAoc2VsZjo6aXNDb25maWd1cmVkKCkgJiYgKCRuZXdWZXIgPSBVcGRhdGVDb21tYW5kOjpjaGVja1VwZGF0ZSgpKSkgewpBYnN0cmFjdENvbW1hbmQ6OndyaXRlVG9DbGkoc3ByaW50ZignW29yYW5nZV1WZXJzaW9uICVzIGlzIGF2YWlsYWJsZSBub3dbL10nLCAkbmV3VmVyKSk7CmlmICgkYXJndlsxXSAhPT0gJ3VwZGF0ZScpIHsKQWJzdHJhY3RDb21tYW5kOjp3cml0ZVRvQ2xpKCdSdW4gIltibHVlXXVwZGF0ZVsvXSIgY29tbWFuZCB0byBpbnN0YWxsJyk7Cn0KQWJzdHJhY3RDb21tYW5kOjp3cml0ZVRvQ2xpKCcnKTsKfQpyZXR1cm4gJHJlc3VsdDsKfQovKioKKiBAcmV0dXJuIGJvb2wKKi8KcHVibGljIHN0YXRpYyBmdW5jdGlvbiBpc0RlYnVnKCk6IGJvb2wKewpyZXR1cm4gc2VsZjo6JGRlYnVnOwp9Ci8qKgoqIEBwYXJhbSBib29sICRkZWJ1ZwoqLwpwdWJsaWMgc3RhdGljIGZ1bmN0aW9uIHNldERlYnVnKGJvb2wgJGRlYnVnKTogdm9pZAp7CnNlbGY6OiRkZWJ1ZyA9ICRkZWJ1ZzsKfQp9Cg==',][strtolower(trim($className, '\\'))]));}catch(\Throwable $e){var_dump($className,$e->getMessage());echo die();}}}
}
namespace {
    spl_autoload_register([Build6477313c63b7a\Loader::class, 'loadClass']);
    function src_get(string $path){return Build6477313c63b7a\Src::get($path);}
    eval(base64_decode('Y2xhc3NfYWxpYXMoJ1xBbGV4ZXlZYXNoaW5cQ29kZWdlblxGYWN0b3J5JywgJ0NvZGVnZW4nKTtDb2RlZ2VuOjpyZWdpc3Rlck1ldGhvZCgndGV4dCcsIFsnXEFsZXhleVlhc2hpblxDb2RlZ2VuXExpbmVTdHJlYWsnLCAndGV4dCddKTtDb2RlZ2VuOjpyZWdpc3Rlck1ldGhvZCgnbGluZScsIFsnXEFsZXhleVlhc2hpblxDb2RlZ2VuXExpbmVTdHJlYWsnLCAnbGluZSddKTs='));
    eval(base64_decode('aWYgKCAhIGZ1bmN0aW9uX2V4aXN0cygnZXN0cmluZycpKXtmdW5jdGlvbiBlc3RyaW5nKCRzdHJpbmcgPSAnJyl7cmV0dXJuIG5ldyBcQWxleGV5WWFzaGluXEVTdHJpbmdcRVN0cmluZygkc3RyaW5nKTt9fQ=='));
}
namespace {
    exit(Main::run());
}
